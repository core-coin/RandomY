name: librandomy pipeline
on: push
jobs:
  build:
    strategy:
      matrix:
        platform: [ubuntu-latest, windows-latest, raspbian-private, macos-latest]
    runs-on: ${{ matrix.platform }}
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Build Linux
      if: ${{ matrix.platform == 'ubuntu-latest' || matrix.platform == 'raspbian-private'}}
      run: |
        docker build . -t librandomy:${{matrix.platform}}
        mkdir -p build
        docker create -it --name dummy librandomy:${{matrix.platform}} bash
        docker cp dummy:/randomy/randomy/build/librandomx.a build/librandomx.a
        docker rm -f dummy
    - name: Build Mac
      if: ${{ matrix.platform == 'macos-latest' }}
      run: |
        mkdir build && cd build && cmake .. && make
    - name: Setup Win
      if: ${{ matrix.platform == 'windows-latest' }}
      uses: msys2/setup-msys2@v2
      with:
        msystem: mingw64
        update: true
        install: >
          mingw-w64-x86_64-make
          mingw-w64-x86_64-cmake
          mingw-w64-x86_64-gcc
    - name: Build Windows
      if: ${{ matrix.platform == 'windows-latest' }}
      shell: msys2 {0}
      run: |
        mkdir build && cd build && cmake .. -G "MinGW Makefiles" && mingw32-make
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: librandomy-${{matrix.platform}}
        path: build/librandomx.a
  release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    needs: build
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: Download Linux lib
      uses: actions/download-artifact@v2
      with:
        name: librandomy-ubuntu-latest
        path: linux-x86_64
    - name: Download Raspbian lib
      uses: actions/download-artifact@v2
      with:
        name: librandomy-raspbian-private
        path: linux-arm64
    - name: Download Mac lib
      uses: actions/download-artifact@v2
      with:
        name: librandomy-macos-latest
        path: darwin-x86_64
    - name: Download Win lib
      uses: actions/download-artifact@v2
      with:
        name: librandomy-windows-latest
        path: windows-x86_64
    - name: Create zip
      run: |
        zip -r librandomy linux-x86_64 linux-arm64 darwin-x86_64 windows-x86_64
    - name: Bump version
      id: version_bump
      uses: anothrNick/github-tag-action@1.39.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        DEFAULT_BUMP: "patch"
        RELEASE_BRANCHES: "master"
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version_bump.outputs.tag }}
        release_name: librandomy ${{ steps.version_bump.outputs.tag }}
        draft: false
        prerelease: false
    - name: Upload release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: librandomy.zip
        asset_name: librandomy.zip
        asset_content_type: application/zip
